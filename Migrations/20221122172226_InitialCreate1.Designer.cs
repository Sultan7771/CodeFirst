// <auto-generated />
using CodeFirstProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CodeFirstProject.Migrations
{
    [DbContext(typeof(PetrolStationContext))]
    [Migration("20221122172226_InitialCreate1")]
    partial class InitialCreate1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CodeFirstProject.Models.FuelInfo", b =>
                {
                    b.Property<int>("FuelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("FuelPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("FuelType")
                        .HasColumnName("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FuelId")
                        .HasName("PK_dbo.FuelInfo");

                    b.ToTable("FuelInfo");

                    b.HasData(
                        new
                        {
                            FuelId = 1,
                            FuelPrice = 130m,
                            FuelType = "Diesel"
                        },
                        new
                        {
                            FuelId = 2,
                            FuelPrice = 100m,
                            FuelType = "Petrol"
                        },
                        new
                        {
                            FuelId = 3,
                            FuelPrice = 50m,
                            FuelType = "Electric"
                        });
                });

            modelBuilder.Entity("CodeFirstProject.Models.PetrolStation", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StationId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("FuelId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPumps")
                        .HasColumnType("int")
                        .HasMaxLength(4);

                    b.Property<bool>("PumpActivation")
                        .HasColumnType("bit");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("StationId")
                        .HasName("PK_dbo.PetrolStation");

                    b.HasIndex("FuelId");

                    b.ToTable("PetrolStation");

                    b.HasData(
                        new
                        {
                            StationId = 1,
                            Address = "Street, City, Postcode",
                            FuelId = 1,
                            NumberOfPumps = 10,
                            PumpActivation = false,
                            StationName = "StationOne"
                        },
                        new
                        {
                            StationId = 2,
                            Address = "Street, City, Postcode",
                            FuelId = 2,
                            NumberOfPumps = 8,
                            PumpActivation = false,
                            StationName = "StationTwo"
                        },
                        new
                        {
                            StationId = 3,
                            Address = "Street, City, Postcode",
                            FuelId = 3,
                            NumberOfPumps = 10,
                            PumpActivation = false,
                            StationName = "StationThree"
                        },
                        new
                        {
                            StationId = 4,
                            Address = "Street, City, Postcode",
                            FuelId = 1,
                            NumberOfPumps = 10,
                            PumpActivation = false,
                            StationName = "StationFour"
                        },
                        new
                        {
                            StationId = 5,
                            Address = "Street, City, Postcode",
                            FuelId = 2,
                            NumberOfPumps = 8,
                            PumpActivation = false,
                            StationName = "StationFive"
                        },
                        new
                        {
                            StationId = 6,
                            Address = "Street, City, Postcode",
                            FuelId = 3,
                            NumberOfPumps = 6,
                            PumpActivation = false,
                            StationName = "StationSix"
                        });
                });

            modelBuilder.Entity("CodeFirstProject.Models.PetrolStation", b =>
                {
                    b.HasOne("CodeFirstProject.Models.FuelInfo", "fuelInfo")
                        .WithMany()
                        .HasForeignKey("FuelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
